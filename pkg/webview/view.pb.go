// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/webview/view.proto

package webview

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Correspond to BuildAndDeployers
type UpdateType int32

const (
	UpdateType_UPDATE_TYPE_UNSPECIFIED    UpdateType = 0
	UpdateType_UPDATE_TYPE_IMAGE          UpdateType = 1
	UpdateType_UPDATE_TYPE_LIVE_UPDATE    UpdateType = 2
	UpdateType_UPDATE_TYPE_DOCKER_COMPOSE UpdateType = 3
	UpdateType_UPDATE_TYPE_K8S            UpdateType = 4
	UpdateType_UPDATE_TYPE_LOCAL          UpdateType = 5
)

var UpdateType_name = map[int32]string{
	0: "UPDATE_TYPE_UNSPECIFIED",
	1: "UPDATE_TYPE_IMAGE",
	2: "UPDATE_TYPE_LIVE_UPDATE",
	3: "UPDATE_TYPE_DOCKER_COMPOSE",
	4: "UPDATE_TYPE_K8S",
	5: "UPDATE_TYPE_LOCAL",
}

var UpdateType_value = map[string]int32{
	"UPDATE_TYPE_UNSPECIFIED":    0,
	"UPDATE_TYPE_IMAGE":          1,
	"UPDATE_TYPE_LIVE_UPDATE":    2,
	"UPDATE_TYPE_DOCKER_COMPOSE": 3,
	"UPDATE_TYPE_K8S":            4,
	"UPDATE_TYPE_LOCAL":          5,
}

func (x UpdateType) String() string {
	return proto.EnumName(UpdateType_name, int32(x))
}

func (UpdateType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{0}
}

// Correspond to implementations of the TargetSpec interface
type TargetType int32

const (
	TargetType_TARGET_TYPE_UNSPECIFIED    TargetType = 0
	TargetType_TARGET_TYPE_IMAGE          TargetType = 1
	TargetType_TARGET_TYPE_K8S            TargetType = 2
	TargetType_TARGET_TYPE_DOCKER_COMPOSE TargetType = 3
	TargetType_TARGET_TYPE_LOCAL          TargetType = 4
)

var TargetType_name = map[int32]string{
	0: "TARGET_TYPE_UNSPECIFIED",
	1: "TARGET_TYPE_IMAGE",
	2: "TARGET_TYPE_K8S",
	3: "TARGET_TYPE_DOCKER_COMPOSE",
	4: "TARGET_TYPE_LOCAL",
}

var TargetType_value = map[string]int32{
	"TARGET_TYPE_UNSPECIFIED":    0,
	"TARGET_TYPE_IMAGE":          1,
	"TARGET_TYPE_K8S":            2,
	"TARGET_TYPE_DOCKER_COMPOSE": 3,
	"TARGET_TYPE_LOCAL":          4,
}

func (x TargetType) String() string {
	return proto.EnumName(TargetType_name, int32(x))
}

func (TargetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{1}
}

type TargetSpec struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 TargetType `protobuf:"varint,2,opt,name=type,proto3,enum=webview.TargetType" json:"type,omitempty"`
	HasLiveUpdate        bool       `protobuf:"varint,3,opt,name=has_live_update,json=hasLiveUpdate,proto3" json:"has_live_update,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TargetSpec) Reset()         { *m = TargetSpec{} }
func (m *TargetSpec) String() string { return proto.CompactTextString(m) }
func (*TargetSpec) ProtoMessage()    {}
func (*TargetSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{0}
}

func (m *TargetSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetSpec.Unmarshal(m, b)
}
func (m *TargetSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetSpec.Marshal(b, m, deterministic)
}
func (m *TargetSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetSpec.Merge(m, src)
}
func (m *TargetSpec) XXX_Size() int {
	return xxx_messageInfo_TargetSpec.Size(m)
}
func (m *TargetSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetSpec.DiscardUnknown(m)
}

var xxx_messageInfo_TargetSpec proto.InternalMessageInfo

func (m *TargetSpec) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TargetSpec) GetType() TargetType {
	if m != nil {
		return m.Type
	}
	return TargetType_TARGET_TYPE_UNSPECIFIED
}

func (m *TargetSpec) GetHasLiveUpdate() bool {
	if m != nil {
		return m.HasLiveUpdate
	}
	return false
}

type BuildRecord struct {
	Edits          []string             `protobuf:"bytes,1,rep,name=edits,proto3" json:"edits,omitempty"`
	Error          string               `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Warnings       []string             `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
	StartTime      *timestamp.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime     *timestamp.Timestamp `protobuf:"bytes,5,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	UpdateTypes    []UpdateType         `protobuf:"varint,9,rep,packed,name=update_types,json=updateTypes,proto3,enum=webview.UpdateType" json:"update_types,omitempty"`
	IsCrashRebuild bool                 `protobuf:"varint,7,opt,name=is_crash_rebuild,json=isCrashRebuild,proto3" json:"is_crash_rebuild,omitempty"`
	// The span id for this build record's logs in the main logstore.
	SpanId               string   `protobuf:"bytes,8,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildRecord) Reset()         { *m = BuildRecord{} }
func (m *BuildRecord) String() string { return proto.CompactTextString(m) }
func (*BuildRecord) ProtoMessage()    {}
func (*BuildRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{1}
}

func (m *BuildRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildRecord.Unmarshal(m, b)
}
func (m *BuildRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildRecord.Marshal(b, m, deterministic)
}
func (m *BuildRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildRecord.Merge(m, src)
}
func (m *BuildRecord) XXX_Size() int {
	return xxx_messageInfo_BuildRecord.Size(m)
}
func (m *BuildRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildRecord.DiscardUnknown(m)
}

var xxx_messageInfo_BuildRecord proto.InternalMessageInfo

func (m *BuildRecord) GetEdits() []string {
	if m != nil {
		return m.Edits
	}
	return nil
}

func (m *BuildRecord) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *BuildRecord) GetWarnings() []string {
	if m != nil {
		return m.Warnings
	}
	return nil
}

func (m *BuildRecord) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *BuildRecord) GetFinishTime() *timestamp.Timestamp {
	if m != nil {
		return m.FinishTime
	}
	return nil
}

func (m *BuildRecord) GetUpdateTypes() []UpdateType {
	if m != nil {
		return m.UpdateTypes
	}
	return nil
}

func (m *BuildRecord) GetIsCrashRebuild() bool {
	if m != nil {
		return m.IsCrashRebuild
	}
	return false
}

func (m *BuildRecord) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

type K8SResourceInfo struct {
	PodName            string `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`
	PodCreationTime    string `protobuf:"bytes,2,opt,name=pod_creation_time,json=podCreationTime,proto3" json:"pod_creation_time,omitempty"`
	PodUpdateStartTime string `protobuf:"bytes,3,opt,name=pod_update_start_time,json=podUpdateStartTime,proto3" json:"pod_update_start_time,omitempty"`
	PodStatus          string `protobuf:"bytes,4,opt,name=pod_status,json=podStatus,proto3" json:"pod_status,omitempty"`
	PodStatusMessage   string `protobuf:"bytes,5,opt,name=pod_status_message,json=podStatusMessage,proto3" json:"pod_status_message,omitempty"`
	AllContainersReady bool   `protobuf:"varint,6,opt,name=all_containers_ready,json=allContainersReady,proto3" json:"all_containers_ready,omitempty"`
	PodRestarts        int32  `protobuf:"varint,7,opt,name=pod_restarts,json=podRestarts,proto3" json:"pod_restarts,omitempty"`
	// The span id for this pod's logs in the main logstore
	SpanId               string   `protobuf:"bytes,9,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *K8SResourceInfo) Reset()         { *m = K8SResourceInfo{} }
func (m *K8SResourceInfo) String() string { return proto.CompactTextString(m) }
func (*K8SResourceInfo) ProtoMessage()    {}
func (*K8SResourceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{2}
}

func (m *K8SResourceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_K8SResourceInfo.Unmarshal(m, b)
}
func (m *K8SResourceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_K8SResourceInfo.Marshal(b, m, deterministic)
}
func (m *K8SResourceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_K8SResourceInfo.Merge(m, src)
}
func (m *K8SResourceInfo) XXX_Size() int {
	return xxx_messageInfo_K8SResourceInfo.Size(m)
}
func (m *K8SResourceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_K8SResourceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_K8SResourceInfo proto.InternalMessageInfo

func (m *K8SResourceInfo) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *K8SResourceInfo) GetPodCreationTime() string {
	if m != nil {
		return m.PodCreationTime
	}
	return ""
}

func (m *K8SResourceInfo) GetPodUpdateStartTime() string {
	if m != nil {
		return m.PodUpdateStartTime
	}
	return ""
}

func (m *K8SResourceInfo) GetPodStatus() string {
	if m != nil {
		return m.PodStatus
	}
	return ""
}

func (m *K8SResourceInfo) GetPodStatusMessage() string {
	if m != nil {
		return m.PodStatusMessage
	}
	return ""
}

func (m *K8SResourceInfo) GetAllContainersReady() bool {
	if m != nil {
		return m.AllContainersReady
	}
	return false
}

func (m *K8SResourceInfo) GetPodRestarts() int32 {
	if m != nil {
		return m.PodRestarts
	}
	return 0
}

func (m *K8SResourceInfo) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

type DCResourceInfo struct {
	ConfigPaths     []string             `protobuf:"bytes,1,rep,name=config_paths,json=configPaths,proto3" json:"config_paths,omitempty"`
	ContainerStatus string               `protobuf:"bytes,2,opt,name=container_status,json=containerStatus,proto3" json:"container_status,omitempty"`
	ContainerID     string               `protobuf:"bytes,3,opt,name=containerID,proto3" json:"containerID,omitempty"`
	StartTime       *timestamp.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// The span id for this docker-compose service's logs in the main logstore
	SpanId               string   `protobuf:"bytes,6,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DCResourceInfo) Reset()         { *m = DCResourceInfo{} }
func (m *DCResourceInfo) String() string { return proto.CompactTextString(m) }
func (*DCResourceInfo) ProtoMessage()    {}
func (*DCResourceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{3}
}

func (m *DCResourceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DCResourceInfo.Unmarshal(m, b)
}
func (m *DCResourceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DCResourceInfo.Marshal(b, m, deterministic)
}
func (m *DCResourceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DCResourceInfo.Merge(m, src)
}
func (m *DCResourceInfo) XXX_Size() int {
	return xxx_messageInfo_DCResourceInfo.Size(m)
}
func (m *DCResourceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DCResourceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DCResourceInfo proto.InternalMessageInfo

func (m *DCResourceInfo) GetConfigPaths() []string {
	if m != nil {
		return m.ConfigPaths
	}
	return nil
}

func (m *DCResourceInfo) GetContainerStatus() string {
	if m != nil {
		return m.ContainerStatus
	}
	return ""
}

func (m *DCResourceInfo) GetContainerID() string {
	if m != nil {
		return m.ContainerID
	}
	return ""
}

func (m *DCResourceInfo) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *DCResourceInfo) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

type YAMLResourceInfo struct {
	K8SResources         []string `protobuf:"bytes,1,rep,name=k8s_resources,json=k8sResources,proto3" json:"k8s_resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YAMLResourceInfo) Reset()         { *m = YAMLResourceInfo{} }
func (m *YAMLResourceInfo) String() string { return proto.CompactTextString(m) }
func (*YAMLResourceInfo) ProtoMessage()    {}
func (*YAMLResourceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{4}
}

func (m *YAMLResourceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YAMLResourceInfo.Unmarshal(m, b)
}
func (m *YAMLResourceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YAMLResourceInfo.Marshal(b, m, deterministic)
}
func (m *YAMLResourceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YAMLResourceInfo.Merge(m, src)
}
func (m *YAMLResourceInfo) XXX_Size() int {
	return xxx_messageInfo_YAMLResourceInfo.Size(m)
}
func (m *YAMLResourceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_YAMLResourceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_YAMLResourceInfo proto.InternalMessageInfo

func (m *YAMLResourceInfo) GetK8SResources() []string {
	if m != nil {
		return m.K8SResources
	}
	return nil
}

type LocalResourceInfo struct {
	Pid                  int64    `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LocalResourceInfo) Reset()         { *m = LocalResourceInfo{} }
func (m *LocalResourceInfo) String() string { return proto.CompactTextString(m) }
func (*LocalResourceInfo) ProtoMessage()    {}
func (*LocalResourceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{5}
}

func (m *LocalResourceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocalResourceInfo.Unmarshal(m, b)
}
func (m *LocalResourceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocalResourceInfo.Marshal(b, m, deterministic)
}
func (m *LocalResourceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocalResourceInfo.Merge(m, src)
}
func (m *LocalResourceInfo) XXX_Size() int {
	return xxx_messageInfo_LocalResourceInfo.Size(m)
}
func (m *LocalResourceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LocalResourceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LocalResourceInfo proto.InternalMessageInfo

func (m *LocalResourceInfo) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type Facet struct {
	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// If span_id is non-empty, that means the value is in the logstore
	// instead of in the value field.
	SpanId               string   `protobuf:"bytes,3,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Facet) Reset()         { *m = Facet{} }
func (m *Facet) String() string { return proto.CompactTextString(m) }
func (*Facet) ProtoMessage()    {}
func (*Facet) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{6}
}

func (m *Facet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Facet.Unmarshal(m, b)
}
func (m *Facet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Facet.Marshal(b, m, deterministic)
}
func (m *Facet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Facet.Merge(m, src)
}
func (m *Facet) XXX_Size() int {
	return xxx_messageInfo_Facet.Size(m)
}
func (m *Facet) XXX_DiscardUnknown() {
	xxx_messageInfo_Facet.DiscardUnknown(m)
}

var xxx_messageInfo_Facet proto.InternalMessageInfo

func (m *Facet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Facet) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Facet) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

type Resource struct {
	Name               string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DirectoriesWatched []string             `protobuf:"bytes,2,rep,name=directories_watched,json=directoriesWatched,proto3" json:"directories_watched,omitempty"`
	PathsWatched       []string             `protobuf:"bytes,3,rep,name=paths_watched,json=pathsWatched,proto3" json:"paths_watched,omitempty"`
	LastDeployTime     *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_deploy_time,json=lastDeployTime,proto3" json:"last_deploy_time,omitempty"`
	TriggerMode        int32                `protobuf:"varint,5,opt,name=trigger_mode,json=triggerMode,proto3" json:"trigger_mode,omitempty"`
	BuildHistory       []*BuildRecord       `protobuf:"bytes,6,rep,name=build_history,json=buildHistory,proto3" json:"build_history,omitempty"`
	CurrentBuild       *BuildRecord         `protobuf:"bytes,7,opt,name=current_build,json=currentBuild,proto3" json:"current_build,omitempty"`
	PendingBuildReason int32                `protobuf:"varint,8,opt,name=pending_build_reason,json=pendingBuildReason,proto3" json:"pending_build_reason,omitempty"`
	PendingBuildEdits  []string             `protobuf:"bytes,9,rep,name=pending_build_edits,json=pendingBuildEdits,proto3" json:"pending_build_edits,omitempty"`
	PendingBuildSince  *timestamp.Timestamp `protobuf:"bytes,10,opt,name=pending_build_since,json=pendingBuildSince,proto3" json:"pending_build_since,omitempty"`
	HasPendingChanges  bool                 `protobuf:"varint,11,opt,name=has_pending_changes,json=hasPendingChanges,proto3" json:"has_pending_changes,omitempty"`
	Endpoints          []string             `protobuf:"bytes,12,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	PodID              string               `protobuf:"bytes,13,opt,name=podID,proto3" json:"podID,omitempty"`
	K8SResourceInfo    *K8SResourceInfo     `protobuf:"bytes,14,opt,name=k8s_resource_info,json=k8sResourceInfo,proto3" json:"k8s_resource_info,omitempty"`
	DcResourceInfo     *DCResourceInfo      `protobuf:"bytes,15,opt,name=dc_resource_info,json=dcResourceInfo,proto3" json:"dc_resource_info,omitempty"`
	YamlResourceInfo   *YAMLResourceInfo    `protobuf:"bytes,16,opt,name=yaml_resource_info,json=yamlResourceInfo,proto3" json:"yaml_resource_info,omitempty"`
	LocalResourceInfo  *LocalResourceInfo   `protobuf:"bytes,17,opt,name=local_resource_info,json=localResourceInfo,proto3" json:"local_resource_info,omitempty"`
	RuntimeStatus      string               `protobuf:"bytes,18,opt,name=runtime_status,json=runtimeStatus,proto3" json:"runtime_status,omitempty"`
	IsTiltfile         bool                 `protobuf:"varint,19,opt,name=is_tiltfile,json=isTiltfile,proto3" json:"is_tiltfile,omitempty"`
	Specs              []*TargetSpec        `protobuf:"bytes,27,rep,name=specs,proto3" json:"specs,omitempty"`
	ShowBuildStatus    bool                 `protobuf:"varint,20,opt,name=show_build_status,json=showBuildStatus,proto3" json:"show_build_status,omitempty"`
	// Obsoleted by crash_log_span_id.
	CrashLog string `protobuf:"bytes,22,opt,name=crash_log,json=crashLog,proto3" json:"crash_log,omitempty"`
	// A span id for the log that crashed.
	CrashLogSpanId       string   `protobuf:"bytes,26,opt,name=crash_log_span_id,json=crashLogSpanId,proto3" json:"crash_log_span_id,omitempty"`
	Facets               []*Facet `protobuf:"bytes,24,rep,name=facets,proto3" json:"facets,omitempty"`
	Queued               bool     `protobuf:"varint,25,opt,name=queued,proto3" json:"queued,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{7}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Resource) GetDirectoriesWatched() []string {
	if m != nil {
		return m.DirectoriesWatched
	}
	return nil
}

func (m *Resource) GetPathsWatched() []string {
	if m != nil {
		return m.PathsWatched
	}
	return nil
}

func (m *Resource) GetLastDeployTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastDeployTime
	}
	return nil
}

func (m *Resource) GetTriggerMode() int32 {
	if m != nil {
		return m.TriggerMode
	}
	return 0
}

func (m *Resource) GetBuildHistory() []*BuildRecord {
	if m != nil {
		return m.BuildHistory
	}
	return nil
}

func (m *Resource) GetCurrentBuild() *BuildRecord {
	if m != nil {
		return m.CurrentBuild
	}
	return nil
}

func (m *Resource) GetPendingBuildReason() int32 {
	if m != nil {
		return m.PendingBuildReason
	}
	return 0
}

func (m *Resource) GetPendingBuildEdits() []string {
	if m != nil {
		return m.PendingBuildEdits
	}
	return nil
}

func (m *Resource) GetPendingBuildSince() *timestamp.Timestamp {
	if m != nil {
		return m.PendingBuildSince
	}
	return nil
}

func (m *Resource) GetHasPendingChanges() bool {
	if m != nil {
		return m.HasPendingChanges
	}
	return false
}

func (m *Resource) GetEndpoints() []string {
	if m != nil {
		return m.Endpoints
	}
	return nil
}

func (m *Resource) GetPodID() string {
	if m != nil {
		return m.PodID
	}
	return ""
}

func (m *Resource) GetK8SResourceInfo() *K8SResourceInfo {
	if m != nil {
		return m.K8SResourceInfo
	}
	return nil
}

func (m *Resource) GetDcResourceInfo() *DCResourceInfo {
	if m != nil {
		return m.DcResourceInfo
	}
	return nil
}

func (m *Resource) GetYamlResourceInfo() *YAMLResourceInfo {
	if m != nil {
		return m.YamlResourceInfo
	}
	return nil
}

func (m *Resource) GetLocalResourceInfo() *LocalResourceInfo {
	if m != nil {
		return m.LocalResourceInfo
	}
	return nil
}

func (m *Resource) GetRuntimeStatus() string {
	if m != nil {
		return m.RuntimeStatus
	}
	return ""
}

func (m *Resource) GetIsTiltfile() bool {
	if m != nil {
		return m.IsTiltfile
	}
	return false
}

func (m *Resource) GetSpecs() []*TargetSpec {
	if m != nil {
		return m.Specs
	}
	return nil
}

func (m *Resource) GetShowBuildStatus() bool {
	if m != nil {
		return m.ShowBuildStatus
	}
	return false
}

func (m *Resource) GetCrashLog() string {
	if m != nil {
		return m.CrashLog
	}
	return ""
}

func (m *Resource) GetCrashLogSpanId() string {
	if m != nil {
		return m.CrashLogSpanId
	}
	return ""
}

func (m *Resource) GetFacets() []*Facet {
	if m != nil {
		return m.Facets
	}
	return nil
}

func (m *Resource) GetQueued() bool {
	if m != nil {
		return m.Queued
	}
	return false
}

type TiltBuild struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	CommitSHA            string   `protobuf:"bytes,2,opt,name=commitSHA,proto3" json:"commitSHA,omitempty"`
	Date                 string   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Dev                  bool     `protobuf:"varint,4,opt,name=dev,proto3" json:"dev,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TiltBuild) Reset()         { *m = TiltBuild{} }
func (m *TiltBuild) String() string { return proto.CompactTextString(m) }
func (*TiltBuild) ProtoMessage()    {}
func (*TiltBuild) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{8}
}

func (m *TiltBuild) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TiltBuild.Unmarshal(m, b)
}
func (m *TiltBuild) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TiltBuild.Marshal(b, m, deterministic)
}
func (m *TiltBuild) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TiltBuild.Merge(m, src)
}
func (m *TiltBuild) XXX_Size() int {
	return xxx_messageInfo_TiltBuild.Size(m)
}
func (m *TiltBuild) XXX_DiscardUnknown() {
	xxx_messageInfo_TiltBuild.DiscardUnknown(m)
}

var xxx_messageInfo_TiltBuild proto.InternalMessageInfo

func (m *TiltBuild) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *TiltBuild) GetCommitSHA() string {
	if m != nil {
		return m.CommitSHA
	}
	return ""
}

func (m *TiltBuild) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *TiltBuild) GetDev() bool {
	if m != nil {
		return m.Dev
	}
	return false
}

type VersionSettings struct {
	CheckUpdates         bool     `protobuf:"varint,1,opt,name=check_updates,json=checkUpdates,proto3" json:"check_updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionSettings) Reset()         { *m = VersionSettings{} }
func (m *VersionSettings) String() string { return proto.CompactTextString(m) }
func (*VersionSettings) ProtoMessage()    {}
func (*VersionSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{9}
}

func (m *VersionSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionSettings.Unmarshal(m, b)
}
func (m *VersionSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionSettings.Marshal(b, m, deterministic)
}
func (m *VersionSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionSettings.Merge(m, src)
}
func (m *VersionSettings) XXX_Size() int {
	return xxx_messageInfo_VersionSettings.Size(m)
}
func (m *VersionSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionSettings.DiscardUnknown(m)
}

var xxx_messageInfo_VersionSettings proto.InternalMessageInfo

func (m *VersionSettings) GetCheckUpdates() bool {
	if m != nil {
		return m.CheckUpdates
	}
	return false
}

type View struct {
	Log       string      `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
	Resources []*Resource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	// We used to have a setting that allowed users to dynamically
	// prepend timestamps in logs.
	DEPRECATEDLogTimestamps bool             `protobuf:"varint,3,opt,name=DEPRECATED_log_timestamps,json=DEPRECATEDLogTimestamps,proto3" json:"DEPRECATED_log_timestamps,omitempty"`
	FeatureFlags            map[string]bool  `protobuf:"bytes,4,rep,name=feature_flags,json=featureFlags,proto3" json:"feature_flags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NeedsAnalyticsNudge     bool             `protobuf:"varint,5,opt,name=needs_analytics_nudge,json=needsAnalyticsNudge,proto3" json:"needs_analytics_nudge,omitempty"`
	RunningTiltBuild        *TiltBuild       `protobuf:"bytes,6,opt,name=running_tilt_build,json=runningTiltBuild,proto3" json:"running_tilt_build,omitempty"`
	LatestTiltBuild         *TiltBuild       `protobuf:"bytes,7,opt,name=latest_tilt_build,json=latestTiltBuild,proto3" json:"latest_tilt_build,omitempty"`
	VersionSettings         *VersionSettings `protobuf:"bytes,12,opt,name=version_settings,json=versionSettings,proto3" json:"version_settings,omitempty"`
	TiltCloudUsername       string           `protobuf:"bytes,8,opt,name=tilt_cloud_username,json=tiltCloudUsername,proto3" json:"tilt_cloud_username,omitempty"`
	TiltCloudSchemeHost     string           `protobuf:"bytes,9,opt,name=tilt_cloud_schemeHost,json=tiltCloudSchemeHost,proto3" json:"tilt_cloud_schemeHost,omitempty"`
	TiltCloudTeamID         string           `protobuf:"bytes,10,opt,name=tilt_cloud_teamID,json=tiltCloudTeamID,proto3" json:"tilt_cloud_teamID,omitempty"`
	FatalError              string           `protobuf:"bytes,11,opt,name=fatal_error,json=fatalError,proto3" json:"fatal_error,omitempty"`
	LogList                 *LogList         `protobuf:"bytes,13,opt,name=log_list,json=logList,proto3" json:"log_list,omitempty"`
	// Allows us to synchronize on a running Tilt intance,
	// so we can tell when Tilt restarted.
	TiltStartTime        *timestamp.Timestamp `protobuf:"bytes,14,opt,name=tilt_start_time,json=tiltStartTime,proto3" json:"tilt_start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *View) Reset()         { *m = View{} }
func (m *View) String() string { return proto.CompactTextString(m) }
func (*View) ProtoMessage()    {}
func (*View) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{10}
}

func (m *View) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_View.Unmarshal(m, b)
}
func (m *View) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_View.Marshal(b, m, deterministic)
}
func (m *View) XXX_Merge(src proto.Message) {
	xxx_messageInfo_View.Merge(m, src)
}
func (m *View) XXX_Size() int {
	return xxx_messageInfo_View.Size(m)
}
func (m *View) XXX_DiscardUnknown() {
	xxx_messageInfo_View.DiscardUnknown(m)
}

var xxx_messageInfo_View proto.InternalMessageInfo

func (m *View) GetLog() string {
	if m != nil {
		return m.Log
	}
	return ""
}

func (m *View) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *View) GetDEPRECATEDLogTimestamps() bool {
	if m != nil {
		return m.DEPRECATEDLogTimestamps
	}
	return false
}

func (m *View) GetFeatureFlags() map[string]bool {
	if m != nil {
		return m.FeatureFlags
	}
	return nil
}

func (m *View) GetNeedsAnalyticsNudge() bool {
	if m != nil {
		return m.NeedsAnalyticsNudge
	}
	return false
}

func (m *View) GetRunningTiltBuild() *TiltBuild {
	if m != nil {
		return m.RunningTiltBuild
	}
	return nil
}

func (m *View) GetLatestTiltBuild() *TiltBuild {
	if m != nil {
		return m.LatestTiltBuild
	}
	return nil
}

func (m *View) GetVersionSettings() *VersionSettings {
	if m != nil {
		return m.VersionSettings
	}
	return nil
}

func (m *View) GetTiltCloudUsername() string {
	if m != nil {
		return m.TiltCloudUsername
	}
	return ""
}

func (m *View) GetTiltCloudSchemeHost() string {
	if m != nil {
		return m.TiltCloudSchemeHost
	}
	return ""
}

func (m *View) GetTiltCloudTeamID() string {
	if m != nil {
		return m.TiltCloudTeamID
	}
	return ""
}

func (m *View) GetFatalError() string {
	if m != nil {
		return m.FatalError
	}
	return ""
}

func (m *View) GetLogList() *LogList {
	if m != nil {
		return m.LogList
	}
	return nil
}

func (m *View) GetTiltStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.TiltStartTime
	}
	return nil
}

type GetViewRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetViewRequest) Reset()         { *m = GetViewRequest{} }
func (m *GetViewRequest) String() string { return proto.CompactTextString(m) }
func (*GetViewRequest) ProtoMessage()    {}
func (*GetViewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{11}
}

func (m *GetViewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetViewRequest.Unmarshal(m, b)
}
func (m *GetViewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetViewRequest.Marshal(b, m, deterministic)
}
func (m *GetViewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetViewRequest.Merge(m, src)
}
func (m *GetViewRequest) XXX_Size() int {
	return xxx_messageInfo_GetViewRequest.Size(m)
}
func (m *GetViewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetViewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetViewRequest proto.InternalMessageInfo

type SnapshotHighlight struct {
	BeginningLogID       string   `protobuf:"bytes,1,opt,name=beginning_logID,json=beginningLogID,proto3" json:"beginning_logID,omitempty"`
	EndingLogID          string   `protobuf:"bytes,2,opt,name=ending_logID,json=endingLogID,proto3" json:"ending_logID,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotHighlight) Reset()         { *m = SnapshotHighlight{} }
func (m *SnapshotHighlight) String() string { return proto.CompactTextString(m) }
func (*SnapshotHighlight) ProtoMessage()    {}
func (*SnapshotHighlight) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{12}
}

func (m *SnapshotHighlight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotHighlight.Unmarshal(m, b)
}
func (m *SnapshotHighlight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotHighlight.Marshal(b, m, deterministic)
}
func (m *SnapshotHighlight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotHighlight.Merge(m, src)
}
func (m *SnapshotHighlight) XXX_Size() int {
	return xxx_messageInfo_SnapshotHighlight.Size(m)
}
func (m *SnapshotHighlight) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotHighlight.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotHighlight proto.InternalMessageInfo

func (m *SnapshotHighlight) GetBeginningLogID() string {
	if m != nil {
		return m.BeginningLogID
	}
	return ""
}

func (m *SnapshotHighlight) GetEndingLogID() string {
	if m != nil {
		return m.EndingLogID
	}
	return ""
}

func (m *SnapshotHighlight) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Snapshot struct {
	View                 *View              `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
	IsSidebarClosed      bool               `protobuf:"varint,2,opt,name=is_sidebar_closed,json=isSidebarClosed,proto3" json:"is_sidebar_closed,omitempty"`
	Path                 string             `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	SnapshotHighlight    *SnapshotHighlight `protobuf:"bytes,4,opt,name=snapshot_highlight,json=snapshotHighlight,proto3" json:"snapshot_highlight,omitempty"`
	SnapshotLink         string             `protobuf:"bytes,5,opt,name=snapshot_link,json=snapshotLink,proto3" json:"snapshot_link,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Snapshot) Reset()         { *m = Snapshot{} }
func (m *Snapshot) String() string { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()    {}
func (*Snapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{13}
}

func (m *Snapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Snapshot.Unmarshal(m, b)
}
func (m *Snapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Snapshot.Marshal(b, m, deterministic)
}
func (m *Snapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Snapshot.Merge(m, src)
}
func (m *Snapshot) XXX_Size() int {
	return xxx_messageInfo_Snapshot.Size(m)
}
func (m *Snapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_Snapshot.DiscardUnknown(m)
}

var xxx_messageInfo_Snapshot proto.InternalMessageInfo

func (m *Snapshot) GetView() *View {
	if m != nil {
		return m.View
	}
	return nil
}

func (m *Snapshot) GetIsSidebarClosed() bool {
	if m != nil {
		return m.IsSidebarClosed
	}
	return false
}

func (m *Snapshot) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Snapshot) GetSnapshotHighlight() *SnapshotHighlight {
	if m != nil {
		return m.SnapshotHighlight
	}
	return nil
}

func (m *Snapshot) GetSnapshotLink() string {
	if m != nil {
		return m.SnapshotLink
	}
	return ""
}

type UploadSnapshotResponse struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadSnapshotResponse) Reset()         { *m = UploadSnapshotResponse{} }
func (m *UploadSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*UploadSnapshotResponse) ProtoMessage()    {}
func (*UploadSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{14}
}

func (m *UploadSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadSnapshotResponse.Unmarshal(m, b)
}
func (m *UploadSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *UploadSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadSnapshotResponse.Merge(m, src)
}
func (m *UploadSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_UploadSnapshotResponse.Size(m)
}
func (m *UploadSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadSnapshotResponse proto.InternalMessageInfo

func (m *UploadSnapshotResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// The webclient needs to notify the server what logs it has,
// so the server knows what to send.
//
// The socket protocol doesn't have any concept of a StatusCode
// to confirm that the receiver got the message, so we need to send this
// in a separate message.
type AckWebsocketRequest struct {
	// The to_checkpoint on the received LogList
	ToCheckpoint int32 `protobuf:"varint,1,opt,name=to_checkpoint,json=toCheckpoint,proto3" json:"to_checkpoint,omitempty"`
	// Allows us to synchronize on a running Tilt intance,
	// so we can tell when we're talking to the same Tilt.
	TiltStartTime        *timestamp.Timestamp `protobuf:"bytes,2,opt,name=tilt_start_time,json=tiltStartTime,proto3" json:"tilt_start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AckWebsocketRequest) Reset()         { *m = AckWebsocketRequest{} }
func (m *AckWebsocketRequest) String() string { return proto.CompactTextString(m) }
func (*AckWebsocketRequest) ProtoMessage()    {}
func (*AckWebsocketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{15}
}

func (m *AckWebsocketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckWebsocketRequest.Unmarshal(m, b)
}
func (m *AckWebsocketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckWebsocketRequest.Marshal(b, m, deterministic)
}
func (m *AckWebsocketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckWebsocketRequest.Merge(m, src)
}
func (m *AckWebsocketRequest) XXX_Size() int {
	return xxx_messageInfo_AckWebsocketRequest.Size(m)
}
func (m *AckWebsocketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AckWebsocketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AckWebsocketRequest proto.InternalMessageInfo

func (m *AckWebsocketRequest) GetToCheckpoint() int32 {
	if m != nil {
		return m.ToCheckpoint
	}
	return 0
}

func (m *AckWebsocketRequest) GetTiltStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.TiltStartTime
	}
	return nil
}

type AckWebsocketResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckWebsocketResponse) Reset()         { *m = AckWebsocketResponse{} }
func (m *AckWebsocketResponse) String() string { return proto.CompactTextString(m) }
func (*AckWebsocketResponse) ProtoMessage()    {}
func (*AckWebsocketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_961ad0c6909086c3, []int{16}
}

func (m *AckWebsocketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckWebsocketResponse.Unmarshal(m, b)
}
func (m *AckWebsocketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckWebsocketResponse.Marshal(b, m, deterministic)
}
func (m *AckWebsocketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckWebsocketResponse.Merge(m, src)
}
func (m *AckWebsocketResponse) XXX_Size() int {
	return xxx_messageInfo_AckWebsocketResponse.Size(m)
}
func (m *AckWebsocketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AckWebsocketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AckWebsocketResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("webview.UpdateType", UpdateType_name, UpdateType_value)
	proto.RegisterEnum("webview.TargetType", TargetType_name, TargetType_value)
	proto.RegisterType((*TargetSpec)(nil), "webview.TargetSpec")
	proto.RegisterType((*BuildRecord)(nil), "webview.BuildRecord")
	proto.RegisterType((*K8SResourceInfo)(nil), "webview.K8sResourceInfo")
	proto.RegisterType((*DCResourceInfo)(nil), "webview.DCResourceInfo")
	proto.RegisterType((*YAMLResourceInfo)(nil), "webview.YAMLResourceInfo")
	proto.RegisterType((*LocalResourceInfo)(nil), "webview.LocalResourceInfo")
	proto.RegisterType((*Facet)(nil), "webview.Facet")
	proto.RegisterType((*Resource)(nil), "webview.Resource")
	proto.RegisterType((*TiltBuild)(nil), "webview.TiltBuild")
	proto.RegisterType((*VersionSettings)(nil), "webview.VersionSettings")
	proto.RegisterType((*View)(nil), "webview.View")
	proto.RegisterMapType((map[string]bool)(nil), "webview.View.FeatureFlagsEntry")
	proto.RegisterType((*GetViewRequest)(nil), "webview.GetViewRequest")
	proto.RegisterType((*SnapshotHighlight)(nil), "webview.SnapshotHighlight")
	proto.RegisterType((*Snapshot)(nil), "webview.Snapshot")
	proto.RegisterType((*UploadSnapshotResponse)(nil), "webview.UploadSnapshotResponse")
	proto.RegisterType((*AckWebsocketRequest)(nil), "webview.AckWebsocketRequest")
	proto.RegisterType((*AckWebsocketResponse)(nil), "webview.AckWebsocketResponse")
}

func init() { proto.RegisterFile("pkg/webview/view.proto", fileDescriptor_961ad0c6909086c3) }

var fileDescriptor_961ad0c6909086c3 = []byte{
	// 2104 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0xdf, 0x6e, 0xdb, 0xc8,
	0xd5, 0xff, 0x64, 0xcb, 0xb6, 0x74, 0x24, 0x4b, 0xd4, 0x28, 0x71, 0x18, 0x27, 0xfb, 0xc5, 0x51,
	0xb0, 0x1b, 0xc7, 0x2d, 0xac, 0xd6, 0x05, 0xb6, 0xd9, 0x14, 0x68, 0xeb, 0x48, 0x4a, 0x62, 0x47,
	0x49, 0x8c, 0x91, 0x93, 0xc5, 0xf6, 0x86, 0xa0, 0xc9, 0x11, 0x35, 0x10, 0xc5, 0xe1, 0x72, 0x46,
	0x76, 0xdd, 0x8b, 0x5e, 0xf4, 0xba, 0x77, 0x7d, 0x8a, 0x7d, 0x82, 0xbe, 0x44, 0xef, 0x16, 0xbd,
	0x2c, 0x7a, 0xd3, 0x07, 0x29, 0xe6, 0x0c, 0x49, 0x51, 0x72, 0x82, 0x74, 0x6f, 0x0c, 0xce, 0xef,
	0xfc, 0x9d, 0x33, 0xbf, 0x39, 0x73, 0x2c, 0xd8, 0x89, 0xa7, 0x41, 0xf7, 0x8a, 0x5d, 0x5c, 0x72,
	0x76, 0xd5, 0xd5, 0x7f, 0x0e, 0xe3, 0x44, 0x28, 0x41, 0xb6, 0x52, 0x6c, 0xf7, 0x7e, 0x20, 0x44,
	0x10, 0xb2, 0xae, 0x1b, 0xf3, 0xae, 0x1b, 0x45, 0x42, 0xb9, 0x8a, 0x8b, 0x48, 0x1a, 0xb5, 0xdd,
	0x07, 0xa9, 0x14, 0x57, 0x17, 0xf3, 0x71, 0x57, 0xf1, 0x19, 0x93, 0xca, 0x9d, 0xc5, 0xa9, 0xc2,
	0xed, 0xa2, 0xff, 0x50, 0x04, 0x06, 0xee, 0xcc, 0x00, 0xce, 0xdd, 0x24, 0x60, 0x6a, 0x14, 0x33,
	0x8f, 0x34, 0x60, 0x8d, 0xfb, 0x76, 0x69, 0xaf, 0xb4, 0x5f, 0xa5, 0x6b, 0xdc, 0x27, 0x8f, 0xa1,
	0xac, 0xae, 0x63, 0x66, 0xaf, 0xed, 0x95, 0xf6, 0x1b, 0x47, 0xed, 0xc3, 0xd4, 0xfe, 0xd0, 0x98,
	0x9c, 0x5f, 0xc7, 0x8c, 0xa2, 0x02, 0xf9, 0x0a, 0x9a, 0x13, 0x57, 0x3a, 0x21, 0xbf, 0x64, 0xce,
	0x3c, 0xf6, 0x5d, 0xc5, 0xec, 0xf5, 0xbd, 0xd2, 0x7e, 0x85, 0x6e, 0x4f, 0x5c, 0x39, 0xe4, 0x97,
	0xec, 0x3d, 0x82, 0x9d, 0x1f, 0xd7, 0xa0, 0xf6, 0x7c, 0xce, 0x43, 0x9f, 0x32, 0x4f, 0x24, 0x3e,
	0xb9, 0x05, 0x1b, 0xcc, 0xe7, 0x4a, 0xda, 0xa5, 0xbd, 0xf5, 0xfd, 0x2a, 0x35, 0x0b, 0x44, 0x93,
	0x44, 0x24, 0x18, 0x57, 0xa3, 0x7a, 0x41, 0x76, 0xa1, 0x72, 0xe5, 0x26, 0x11, 0x8f, 0x02, 0x69,
	0xaf, 0xa3, 0x7a, 0xbe, 0x26, 0xdf, 0x00, 0x48, 0xe5, 0x26, 0xca, 0xd1, 0xdb, 0xb6, 0xcb, 0x7b,
	0xa5, 0xfd, 0xda, 0xd1, 0xee, 0xa1, 0xa9, 0xc9, 0x61, 0x56, 0x93, 0xc3, 0xf3, 0xac, 0x26, 0xb4,
	0x8a, 0xda, 0x7a, 0x4d, 0x7e, 0x03, 0xb5, 0x31, 0x8f, 0xb8, 0x9c, 0x18, 0xdb, 0x8d, 0xcf, 0xda,
	0x82, 0x51, 0x47, 0xe3, 0xaf, 0xa1, 0x6e, 0xb6, 0xeb, 0xe8, 0x32, 0x48, 0xbb, 0xba, 0xb7, 0xbe,
	0x54, 0x28, 0xb3, 0x6d, 0x2c, 0x54, 0x6d, 0x9e, 0x7f, 0x4b, 0xb2, 0x0f, 0x16, 0x97, 0x8e, 0x97,
	0xb8, 0x72, 0xe2, 0x24, 0xec, 0x42, 0x57, 0xc4, 0xde, 0xc2, 0x82, 0x35, 0xb8, 0xec, 0x69, 0x98,
	0x1a, 0x94, 0xdc, 0x81, 0x2d, 0x19, 0xbb, 0x91, 0xc3, 0x7d, 0xbb, 0x82, 0xd5, 0xd8, 0xd4, 0xcb,
	0x13, 0xff, 0xb4, 0x5c, 0xd9, 0xb4, 0xb6, 0xe8, 0x7a, 0x28, 0x82, 0xce, 0x3f, 0xd7, 0xa0, 0xf9,
	0xfa, 0xa9, 0xa4, 0x4c, 0x8a, 0x79, 0xe2, 0xb1, 0x93, 0x68, 0x2c, 0xc8, 0x5d, 0xa8, 0xc4, 0xc2,
	0x77, 0x22, 0x77, 0xc6, 0xd2, 0x03, 0xdd, 0x8a, 0x85, 0xff, 0xd6, 0x9d, 0x31, 0x72, 0x00, 0x2d,
	0x2d, 0xf2, 0x12, 0x86, 0x14, 0x32, 0xfb, 0x36, 0xa5, 0x6e, 0xc6, 0xc2, 0xef, 0xa5, 0x38, 0x6e,
	0xf0, 0x97, 0x70, 0x5b, 0xeb, 0xa6, 0x9b, 0x2c, 0xd4, 0x78, 0x1d, 0xf5, 0x49, 0x2c, 0x7c, 0xb3,
	0xc7, 0x51, 0x5e, 0xd0, 0x2f, 0x00, 0xb4, 0x89, 0x54, 0xae, 0x9a, 0x4b, 0x3c, 0x8b, 0x2a, 0xad,
	0xc6, 0xc2, 0x1f, 0x21, 0x40, 0x7e, 0x0e, 0x64, 0x21, 0x76, 0x66, 0x4c, 0x4a, 0x37, 0x30, 0x65,
	0xaf, 0x52, 0x2b, 0x57, 0x7b, 0x63, 0x70, 0xf2, 0x0b, 0xb8, 0xe5, 0x86, 0xa1, 0xe3, 0x89, 0x48,
	0xb9, 0x3c, 0x62, 0x89, 0x74, 0x12, 0xe6, 0xfa, 0xd7, 0xf6, 0x26, 0x16, 0x8b, 0xb8, 0x61, 0xd8,
	0xcb, 0x45, 0x54, 0x4b, 0xc8, 0x43, 0xa8, 0x6b, 0xff, 0x09, 0xc3, 0x64, 0x25, 0x96, 0x75, 0x83,
	0xd6, 0x62, 0xe1, 0xd3, 0x14, 0x2a, 0xd6, 0xb4, 0xba, 0x52, 0xd3, 0x8a, 0x65, 0x0a, 0xe5, 0xe8,
	0xba, 0xfe, 0xbb, 0x04, 0x8d, 0x7e, 0x6f, 0xa9, 0xac, 0x0f, 0xa1, 0xee, 0x89, 0x68, 0xcc, 0x03,
	0x27, 0x76, 0xd5, 0x24, 0xe3, 0x6d, 0xcd, 0x60, 0x67, 0x1a, 0x22, 0x4f, 0xc0, 0xca, 0xd3, 0xcd,
	0xaa, 0x90, 0x56, 0x37, 0xc7, 0xd3, 0x5a, 0xec, 0x41, 0x2d, 0x87, 0x4e, 0xfa, 0x69, 0x4d, 0x8b,
	0xd0, 0x0a, 0xb1, 0x37, 0x7e, 0x0a, 0xb1, 0x0b, 0xbb, 0xdc, 0x5c, 0xd9, 0x65, 0xd9, 0xda, 0x30,
	0xcc, 0xf9, 0x35, 0x58, 0xdf, 0x1d, 0xbf, 0x19, 0x2e, 0x6d, 0xf1, 0x11, 0x6c, 0x4f, 0x9f, 0xea,
	0x3a, 0x1b, 0x2c, 0xdb, 0x63, 0x7d, 0xba, 0x60, 0x98, 0xec, 0x7c, 0x09, 0xad, 0xa1, 0xf0, 0xdc,
	0x70, 0xc9, 0xd2, 0x82, 0xf5, 0x38, 0xed, 0x1f, 0xeb, 0x54, 0x7f, 0x76, 0x4e, 0x61, 0xe3, 0x85,
	0xeb, 0x31, 0x45, 0x08, 0x94, 0x0b, 0x54, 0xc4, 0x6f, 0x7d, 0xcd, 0x2f, 0xdd, 0x70, 0x9e, 0x71,
	0xcf, 0x2c, 0x8a, 0x69, 0xaf, 0x17, 0xd3, 0xee, 0xfc, 0xa3, 0x0a, 0x95, 0x2c, 0xdc, 0x47, 0xfd,
	0x75, 0xa1, 0xed, 0xf3, 0x84, 0x79, 0x4a, 0x24, 0x9c, 0x49, 0xe7, 0xca, 0x55, 0xde, 0x84, 0xf9,
	0xf6, 0x1a, 0xa6, 0x4f, 0x0a, 0xa2, 0x6f, 0x8d, 0x44, 0xef, 0x14, 0x4f, 0x31, 0x57, 0x35, 0x6d,
	0xa5, 0x8e, 0x60, 0xa6, 0xd4, 0x07, 0x2b, 0x74, 0xa5, 0x72, 0x7c, 0x16, 0x87, 0xe2, 0xfa, 0x7f,
	0x6d, 0x30, 0x0d, 0x6d, 0xd3, 0x47, 0x13, 0x3c, 0x8c, 0x87, 0x50, 0x57, 0x09, 0x0f, 0x02, 0x96,
	0x38, 0x33, 0xe1, 0x9b, 0x93, 0xdc, 0xa0, 0xb5, 0x14, 0x7b, 0x23, 0x7c, 0x46, 0xbe, 0x81, 0x6d,
	0xbc, 0xf2, 0xce, 0x84, 0x4b, 0x25, 0x12, 0xcd, 0xf1, 0xf5, 0xfd, 0xda, 0xd1, 0xad, 0xbc, 0x99,
	0x14, 0x1a, 0x27, 0xad, 0xa3, 0xea, 0x2b, 0xa3, 0xa9, 0x4d, 0xbd, 0x79, 0x92, 0xb0, 0x48, 0x39,
	0x8b, 0x5e, 0xf2, 0x49, 0xd3, 0x54, 0x15, 0x31, 0x7d, 0xc1, 0x62, 0x16, 0xf9, 0x3c, 0x0a, 0x8c,
	0xa9, 0xbe, 0x5f, 0x52, 0x44, 0xd8, 0x6c, 0x36, 0x28, 0x49, 0x65, 0xa9, 0xbd, 0x96, 0x90, 0x43,
	0x68, 0x2f, 0x5b, 0x98, 0x0e, 0x5e, 0xc5, 0xda, 0xb5, 0x8a, 0x06, 0x03, 0xec, 0xe6, 0xa7, 0xab,
	0xfa, 0x92, 0x47, 0x1e, 0xb3, 0xe1, 0xb3, 0x35, 0x5c, 0xf2, 0x35, 0xd2, 0x46, 0x3a, 0xb6, 0x7e,
	0x67, 0x32, 0x7f, 0xde, 0xc4, 0x8d, 0x02, 0x26, 0xed, 0x1a, 0x76, 0x83, 0xd6, 0xc4, 0x95, 0x67,
	0x46, 0xd2, 0x33, 0x02, 0x72, 0x1f, 0xaa, 0x2c, 0xf2, 0x63, 0xc1, 0x23, 0x25, 0xed, 0x3a, 0x66,
	0xb8, 0x00, 0x34, 0x01, 0x63, 0xe1, 0x9f, 0xf4, 0xed, 0x6d, 0x43, 0x40, 0x5c, 0x90, 0x3e, 0xb4,
	0x8a, 0xfc, 0x77, 0x78, 0x34, 0x16, 0x76, 0x03, 0xb3, 0xb5, 0xf3, 0x82, 0xae, 0xb4, 0x5b, 0xda,
	0x9c, 0xae, 0xf4, 0xdf, 0x63, 0xb0, 0x7c, 0x6f, 0xc5, 0x49, 0x13, 0x9d, 0xdc, 0xc9, 0x9d, 0x2c,
	0xf7, 0x16, 0xda, 0xf0, 0xbd, 0x25, 0x17, 0x2f, 0x81, 0x5c, 0xbb, 0xb3, 0x70, 0xc5, 0x89, 0x85,
	0x4e, 0xee, 0xe6, 0x4e, 0x56, 0xef, 0x2f, 0xb5, 0xb4, 0xd1, 0x92, 0xa3, 0x53, 0x68, 0x87, 0xfa,
	0xb2, 0xae, 0x78, 0x6a, 0xa5, 0x27, 0x90, 0x79, 0xba, 0x71, 0xa1, 0x69, 0x2b, 0xbc, 0x71, 0xc7,
	0xbf, 0x84, 0x46, 0x32, 0x8f, 0xf4, 0x2d, 0xc8, 0x7a, 0x1b, 0xc1, 0xe2, 0x6d, 0xa7, 0x68, 0xda,
	0xd9, 0x1e, 0x40, 0x8d, 0x4b, 0x47, 0xf1, 0x50, 0x8d, 0x79, 0xc8, 0xec, 0x36, 0x1e, 0x10, 0x70,
	0x79, 0x9e, 0x22, 0xe4, 0x09, 0x6c, 0xc8, 0x98, 0x79, 0xd2, 0xbe, 0x87, 0x2c, 0x5f, 0x9d, 0x2d,
	0xf4, 0x38, 0x42, 0x8d, 0x86, 0x7e, 0xaf, 0xe4, 0x44, 0x5c, 0x65, 0xec, 0x31, 0x51, 0x6f, 0xa1,
	0xc7, 0xa6, 0x16, 0x18, 0x7e, 0x98, 0xb8, 0xf7, 0xa0, 0x6a, 0x5e, 0xd5, 0x50, 0x04, 0xf6, 0x0e,
	0x66, 0x56, 0x41, 0x60, 0x28, 0x02, 0xf2, 0x04, 0x5a, 0xb9, 0xd0, 0xc9, 0x9a, 0xcc, 0x2e, 0x2a,
	0x35, 0x32, 0xa5, 0x11, 0x36, 0x1b, 0xf2, 0x15, 0x6c, 0x8e, 0x75, 0xe3, 0x92, 0xb6, 0x8d, 0xf9,
	0x35, 0xf2, 0xfc, 0xb0, 0x9f, 0xd1, 0x54, 0x4a, 0x76, 0x60, 0xf3, 0xfb, 0x39, 0x9b, 0x33, 0xdf,
	0xbe, 0x8b, 0x09, 0xa5, 0xab, 0xd3, 0x72, 0xe5, 0xb6, 0xb5, 0x73, 0x5a, 0xae, 0xdc, 0xb1, 0x6c,
	0x5a, 0xf7, 0xc4, 0xec, 0x82, 0x47, 0x0c, 0x1f, 0x15, 0xba, 0xe9, 0x86, 0x2c, 0x51, 0xb2, 0xc3,
	0xa1, 0xaa, 0x8b, 0x61, 0x6e, 0xa1, 0x0d, 0x5b, 0x97, 0x2c, 0x91, 0x5c, 0x44, 0xd9, 0x63, 0x9d,
	0x2e, 0x35, 0x83, 0x3d, 0x31, 0x9b, 0x71, 0x35, 0x7a, 0x75, 0x9c, 0x36, 0xca, 0x05, 0xa0, 0xdb,
	0x60, 0x3e, 0x6c, 0x55, 0x29, 0x7e, 0xeb, 0x2e, 0xec, 0xb3, 0x4b, 0xec, 0x51, 0x15, 0xaa, 0x3f,
	0x3b, 0x5f, 0x43, 0xf3, 0x83, 0x71, 0x37, 0x62, 0x4a, 0xe1, 0xc0, 0xf4, 0x08, 0xb6, 0xbd, 0x09,
	0xf3, 0xa6, 0xe9, 0xcb, 0x2e, 0x31, 0x6c, 0x85, 0xd6, 0x11, 0x34, 0x2f, 0xba, 0xec, 0xfc, 0xb0,
	0x09, 0xe5, 0x0f, 0x9c, 0x5d, 0x69, 0x97, 0xba, 0x9e, 0x26, 0x35, 0xfd, 0x49, 0xba, 0x50, 0x5d,
	0x3c, 0x10, 0x6b, 0x58, 0xa2, 0x56, 0x5e, 0xa2, 0x8c, 0x30, 0x74, 0xa1, 0x43, 0x9e, 0xc1, 0xdd,
	0xfe, 0xe0, 0x8c, 0x0e, 0x7a, 0xc7, 0xe7, 0x83, 0x3e, 0x1e, 0x40, 0x3e, 0xa1, 0xca, 0x74, 0x56,
	0xbc, 0xb3, 0x50, 0x18, 0x8a, 0x20, 0xef, 0x03, 0x92, 0xf4, 0x61, 0x7b, 0xcc, 0x5c, 0x35, 0x4f,
	0x98, 0x33, 0x0e, 0xdd, 0x40, 0x0f, 0x15, 0x3a, 0xe0, 0x83, 0x3c, 0xe0, 0x07, 0x3c, 0x18, 0xa3,
	0xf2, 0x42, 0x6b, 0x0c, 0x22, 0x95, 0x5c, 0xd3, 0xfa, 0xb8, 0x00, 0x91, 0x23, 0xb8, 0x1d, 0x31,
	0xe6, 0x4b, 0xc7, 0x8d, 0xdc, 0xf0, 0x5a, 0x71, 0x4f, 0x3a, 0xd1, 0xdc, 0x4f, 0x67, 0x8f, 0x0a,
	0x6d, 0xa3, 0xf0, 0x38, 0x93, 0xbd, 0xd5, 0x22, 0xf2, 0x7b, 0x20, 0xc9, 0x3c, 0xd2, 0x33, 0x26,
	0x72, 0x39, 0xed, 0xae, 0x9b, 0x78, 0x71, 0xc8, 0x82, 0xb2, 0xd9, 0x39, 0x52, 0x2b, 0xd5, 0x5e,
	0x9c, 0xec, 0x6f, 0xa1, 0x15, 0xea, 0x62, 0xaa, 0xa2, 0x83, 0xad, 0x4f, 0x3a, 0x68, 0x1a, 0xe5,
	0x85, 0x7d, 0x0f, 0xac, 0x94, 0x0a, 0x8e, 0x4c, 0x0f, 0xcf, 0xae, 0xaf, 0x34, 0xa3, 0x95, 0xc3,
	0xa5, 0xcd, 0xcb, 0x95, 0xd3, 0x3e, 0x84, 0x36, 0x46, 0xf7, 0x42, 0x31, 0xf7, 0x9d, 0xb9, 0x64,
	0x09, 0x3e, 0x9e, 0x66, 0xa0, 0x6c, 0x69, 0x51, 0x4f, 0x4b, 0xde, 0xa7, 0x02, 0x5d, 0xaa, 0x82,
	0xbe, 0xf4, 0x26, 0x6c, 0xc6, 0x5e, 0x09, 0xa9, 0xd2, 0x71, 0xa9, 0x9d, 0x5b, 0x8c, 0x72, 0x91,
	0xbe, 0xa5, 0x05, 0x1b, 0xc5, 0xdc, 0xd9, 0x49, 0x1f, 0x9b, 0x7c, 0x95, 0x36, 0x73, 0xfd, 0x73,
	0x84, 0x75, 0x77, 0x18, 0xbb, 0xca, 0x0d, 0x1d, 0x33, 0xe6, 0xd7, 0x50, 0x0b, 0x10, 0x1a, 0xe0,
	0xac, 0xff, 0x33, 0xa8, 0x68, 0x8a, 0x84, 0x5c, 0x2a, 0x6c, 0xce, 0xb5, 0x23, 0xab, 0xd0, 0xa6,
	0x82, 0x21, 0x97, 0x8a, 0x6e, 0x85, 0xe6, 0x83, 0x3c, 0x07, 0x0c, 0x50, 0x9c, 0x4e, 0x1b, 0x9f,
	0x7d, 0x5c, 0xb6, 0xb5, 0x49, 0x3e, 0xb4, 0xee, 0xfe, 0x0e, 0x5a, 0x37, 0xf8, 0xa3, 0x69, 0x3f,
	0x65, 0xd7, 0x19, 0xed, 0xa7, 0xec, 0x7a, 0x79, 0x64, 0xa9, 0xa4, 0x23, 0xcb, 0xb3, 0xb5, 0xa7,
	0xa5, 0x8e, 0x05, 0x8d, 0x97, 0x4c, 0x69, 0x22, 0x52, 0xf6, 0xfd, 0x9c, 0x49, 0xd5, 0x91, 0xd0,
	0x1a, 0x45, 0x6e, 0x2c, 0x27, 0x42, 0xbd, 0xe2, 0xc1, 0x24, 0xe4, 0xc1, 0x44, 0x91, 0xc7, 0xd0,
	0xbc, 0x60, 0x01, 0x37, 0x94, 0x0a, 0x45, 0x70, 0xd2, 0x4f, 0xdd, 0x37, 0x72, 0x78, 0xa8, 0x51,
	0x3d, 0x30, 0xa4, 0x8f, 0x9c, 0xd1, 0x32, 0x57, 0xbf, 0x66, 0x30, 0xa3, 0x42, 0xa0, 0xac, 0xd8,
	0x1f, 0x55, 0x76, 0xf9, 0xf5, 0x77, 0xe7, 0x5f, 0x25, 0xa8, 0x64, 0x51, 0xc9, 0x43, 0x28, 0xeb,
	0x8a, 0x61, 0x84, 0xda, 0xd1, 0xf6, 0xd2, 0x75, 0xa1, 0x28, 0xd2, 0xa7, 0xc6, 0xa5, 0x23, 0xb9,
	0xcf, 0x2e, 0xdc, 0x44, 0x9f, 0x9d, 0xc4, 0x89, 0x09, 0x7b, 0x2b, 0x97, 0x23, 0x83, 0xf7, 0x10,
	0xd6, 0xf1, 0xf4, 0x64, 0x94, 0xc5, 0xd3, 0xdf, 0xe4, 0x04, 0x88, 0x4c, 0xc3, 0x39, 0x93, 0x6c,
	0x97, 0xf9, 0x7c, 0x94, 0x05, 0xbc, 0x51, 0x07, 0xda, 0x92, 0x37, 0x4a, 0xf3, 0x08, 0xb6, 0x73,
	0x57, 0x21, 0x8f, 0xa6, 0xe9, 0xff, 0x04, 0xf5, 0x0c, 0x1c, 0xf2, 0x68, 0xda, 0x39, 0x80, 0x9d,
	0xf7, 0x71, 0x28, 0x5c, 0x3f, 0x73, 0x49, 0x99, 0x8c, 0x45, 0x24, 0xb1, 0xed, 0xcd, 0x93, 0x30,
	0x3b, 0xac, 0x79, 0x12, 0x76, 0xfe, 0x0c, 0xed, 0x63, 0x6f, 0xfa, 0x2d, 0xbb, 0x90, 0xc2, 0x9b,
	0x32, 0x95, 0x9e, 0x8b, 0x8e, 0xa3, 0x84, 0x83, 0x8d, 0x0e, 0xe7, 0x00, 0x34, 0xd9, 0xa0, 0x75,
	0x25, 0x7a, 0x39, 0xf6, 0x31, 0x4e, 0xad, 0xfd, 0x44, 0x4e, 0x75, 0x76, 0xe0, 0xd6, 0x72, 0x7c,
	0x93, 0xe9, 0xc1, 0x0f, 0x25, 0x80, 0xc5, 0x3f, 0x86, 0xe4, 0x1e, 0xdc, 0x79, 0x7f, 0xd6, 0x3f,
	0x3e, 0x1f, 0x38, 0xe7, 0xdf, 0x9d, 0x0d, 0x9c, 0xf7, 0x6f, 0x47, 0x67, 0x83, 0xde, 0xc9, 0x8b,
	0x93, 0x41, 0xdf, 0xfa, 0x3f, 0x72, 0x1b, 0x5a, 0x45, 0xe1, 0xc9, 0x9b, 0xe3, 0x97, 0x03, 0xab,
	0xb4, 0x6a, 0x33, 0x3c, 0xf9, 0x30, 0x70, 0x0c, 0x60, 0xad, 0x91, 0xff, 0x87, 0xdd, 0xa2, 0xb0,
	0xff, 0xae, 0xf7, 0x7a, 0x40, 0x9d, 0xde, 0xbb, 0x37, 0x67, 0xef, 0x46, 0x03, 0x6b, 0x9d, 0xb4,
	0xa1, 0x59, 0x94, 0xbf, 0x7e, 0x3a, 0xb2, 0xca, 0xab, 0x81, 0x86, 0xef, 0x7a, 0xc7, 0x43, 0x6b,
	0xe3, 0xe0, 0xaf, 0xa5, 0xec, 0x07, 0x82, 0x2c, 0xd7, 0xf3, 0x63, 0xfa, 0x72, 0x70, 0xfe, 0x89,
	0x5c, 0x8b, 0xc2, 0x2c, 0xd7, 0x36, 0x34, 0x8b, 0xb0, 0x0e, 0x87, 0x39, 0x16, 0xc1, 0x1b, 0x39,
	0xae, 0xf8, 0x32, 0xe9, 0x94, 0x8f, 0xfe, 0x5e, 0x82, 0x9a, 0x66, 0xef, 0x88, 0x25, 0x97, 0xdc,
	0x63, 0xa4, 0x0f, 0x5b, 0xe9, 0xad, 0x23, 0x8b, 0xb1, 0x6a, 0xf9, 0x1e, 0xee, 0x2e, 0xf3, 0xbe,
	0xd3, 0xfa, 0xcb, 0x8f, 0xff, 0xf9, 0xdb, 0x5a, 0x8d, 0x54, 0xf1, 0x97, 0x14, 0xbc, 0x04, 0x17,
	0xd0, 0x58, 0x26, 0x15, 0x69, 0xdd, 0xa0, 0xee, 0xee, 0x83, 0xc2, 0x3f, 0xf5, 0x1f, 0x23, 0x60,
	0xe7, 0x3e, 0x3a, 0xde, 0xe9, 0xb4, 0xd0, 0x71, 0xc6, 0xda, 0x6e, 0xc4, 0xae, 0x9e, 0x95, 0x0e,
	0x8e, 0xfe, 0x04, 0x56, 0xce, 0x84, 0x2c, 0xfb, 0x31, 0xd4, 0x8b, 0x04, 0x21, 0xf7, 0xf3, 0x10,
	0x1f, 0xe1, 0xed, 0xee, 0x17, 0x9f, 0x90, 0xa6, 0xe1, 0xef, 0x62, 0xf8, 0x76, 0xa7, 0xd1, 0xbd,
	0xca, 0x64, 0x5d, 0xd7, 0x9b, 0x3e, 0x2b, 0x1d, 0x3c, 0x7f, 0xf2, 0x87, 0xc7, 0x01, 0x57, 0x93,
	0xf9, 0xc5, 0xa1, 0x27, 0x66, 0xdd, 0x2b, 0x1e, 0xf9, 0x33, 0x1e, 0x86, 0x2c, 0x0a, 0xba, 0x9a,
	0xb0, 0xdd, 0xc2, 0x2f, 0x43, 0x17, 0x9b, 0x48, 0xeb, 0x5f, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff,
	0x7d, 0x80, 0x9f, 0x23, 0x8f, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ViewServiceClient is the client API for ViewService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ViewServiceClient interface {
	GetView(ctx context.Context, in *GetViewRequest, opts ...grpc.CallOption) (*View, error)
	UploadSnapshot(ctx context.Context, in *Snapshot, opts ...grpc.CallOption) (*UploadSnapshotResponse, error)
}

type viewServiceClient struct {
	cc *grpc.ClientConn
}

func NewViewServiceClient(cc *grpc.ClientConn) ViewServiceClient {
	return &viewServiceClient{cc}
}

func (c *viewServiceClient) GetView(ctx context.Context, in *GetViewRequest, opts ...grpc.CallOption) (*View, error) {
	out := new(View)
	err := c.cc.Invoke(ctx, "/webview.ViewService/GetView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *viewServiceClient) UploadSnapshot(ctx context.Context, in *Snapshot, opts ...grpc.CallOption) (*UploadSnapshotResponse, error) {
	out := new(UploadSnapshotResponse)
	err := c.cc.Invoke(ctx, "/webview.ViewService/UploadSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ViewServiceServer is the server API for ViewService service.
type ViewServiceServer interface {
	GetView(context.Context, *GetViewRequest) (*View, error)
	UploadSnapshot(context.Context, *Snapshot) (*UploadSnapshotResponse, error)
}

// UnimplementedViewServiceServer can be embedded to have forward compatible implementations.
type UnimplementedViewServiceServer struct {
}

func (*UnimplementedViewServiceServer) GetView(ctx context.Context, req *GetViewRequest) (*View, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetView not implemented")
}
func (*UnimplementedViewServiceServer) UploadSnapshot(ctx context.Context, req *Snapshot) (*UploadSnapshotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadSnapshot not implemented")
}

func RegisterViewServiceServer(s *grpc.Server, srv ViewServiceServer) {
	s.RegisterService(&_ViewService_serviceDesc, srv)
}

func _ViewService_GetView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetViewRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewServiceServer).GetView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webview.ViewService/GetView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewServiceServer).GetView(ctx, req.(*GetViewRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ViewService_UploadSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Snapshot)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ViewServiceServer).UploadSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webview.ViewService/UploadSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ViewServiceServer).UploadSnapshot(ctx, req.(*Snapshot))
	}
	return interceptor(ctx, in, info, handler)
}

var _ViewService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "webview.ViewService",
	HandlerType: (*ViewServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetView",
			Handler:    _ViewService_GetView_Handler,
		},
		{
			MethodName: "UploadSnapshot",
			Handler:    _ViewService_UploadSnapshot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/webview/view.proto",
}

// WebsocketServiceClient is the client API for WebsocketService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebsocketServiceClient interface {
	AckWebsocket(ctx context.Context, in *AckWebsocketRequest, opts ...grpc.CallOption) (*AckWebsocketResponse, error)
}

type websocketServiceClient struct {
	cc *grpc.ClientConn
}

func NewWebsocketServiceClient(cc *grpc.ClientConn) WebsocketServiceClient {
	return &websocketServiceClient{cc}
}

func (c *websocketServiceClient) AckWebsocket(ctx context.Context, in *AckWebsocketRequest, opts ...grpc.CallOption) (*AckWebsocketResponse, error) {
	out := new(AckWebsocketResponse)
	err := c.cc.Invoke(ctx, "/webview.WebsocketService/AckWebsocket", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebsocketServiceServer is the server API for WebsocketService service.
type WebsocketServiceServer interface {
	AckWebsocket(context.Context, *AckWebsocketRequest) (*AckWebsocketResponse, error)
}

// UnimplementedWebsocketServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWebsocketServiceServer struct {
}

func (*UnimplementedWebsocketServiceServer) AckWebsocket(ctx context.Context, req *AckWebsocketRequest) (*AckWebsocketResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AckWebsocket not implemented")
}

func RegisterWebsocketServiceServer(s *grpc.Server, srv WebsocketServiceServer) {
	s.RegisterService(&_WebsocketService_serviceDesc, srv)
}

func _WebsocketService_AckWebsocket_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AckWebsocketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebsocketServiceServer).AckWebsocket(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webview.WebsocketService/AckWebsocket",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebsocketServiceServer).AckWebsocket(ctx, req.(*AckWebsocketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebsocketService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "webview.WebsocketService",
	HandlerType: (*WebsocketServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AckWebsocket",
			Handler:    _WebsocketService_AckWebsocket_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/webview/view.proto",
}

@import "constants";

.Sidebar {
  position: fixed;
  top: 0;
  right: 0;
  bottom: $statusbar-height;
  width: $sidebar-width;
  background-color: $color-navy;
  border-left: 2px solid $color-navy-light;
  box-sizing: border-box;
  overflow-y: auto;
  transform: translateX(0%);
  transition: transform ease $animation-timing;
  font-size: $font-size;
  display: flex;
  flex-direction: column;
  z-index: $z-sidebar;
}
.Sidebar.is-closed {
  transform: translateX(calc(100% - #{$sidebar-collapsed-width}));
}

// Resource List
.Sidebar-resources {
  flex: 1 0 auto;
  font-weight: bold;
}
.Sidebar-list {
  list-style: none;
}

.resLink {
  right: 0;
  background-color: $color-navy;
  border-bottom: 1px solid $color-navy-light;
  color: $color-white;
  text-decoration: none;
  display: flex;
  align-items: center;
  height: $sidebar-item;
  transition-property: color, background-color;
  transition-duration: $animation-timing;
  transition-timing-function: ease;
}
.resLink:hover {
  right: 0;
  background-color: $color-navy-dark;
  color: $color-blue-light;
}
.resLink.is-selected {
  right: 0;
  background-color: $color-white;
  color: $color-navy;
}
.resLink::before {
  content: "●";
  width: $spacing-unit * 1.5;
  text-align: center;
}
.resLink.has-warnings::after {
  content: "⚠";
  margin-top: -5px;
  margin-left: $spacing-unit / 2;
  font-size: 30px;
  color: $color-yellow;
}
.resLink--all {
  text-transform: uppercase;
}
.resLink--all::before {
  content: "┌";
  color: $color-grey-dark;
  margin-top: -8px;
}
.resLink--ok::before {
  color: $color-green;
}
.resLink--ok::before {
  color: $color-green;
}
.resLink--pending::before {
  color: $color-yellow;
}
.resLink--error::before {
  color: $color-red;
}

// Collapse/Expand
.Sidebar-spacer {
  flex-grow: 1;
  height: 0;
}
.Sidebar-toggle {
  background-color: $color-navy;
  border: 0 none;
  border-top: 1px solid $color-navy-light;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  display: flex;
  align-items: center;
  min-height: $sidebar-item;
  margin: 0;
  padding: 0;
  @include button-text;
  cursor: pointer;
  transition-property: color, background-color;
  transition-duration: $animation-timing;
  transition-timing-function: ease;
}
.Sidebar-toggle:hover {
  background-color: $color-navy-dark;
  color: $color-blue-light;
}
.Sidebar-toggle > svg {
  fill: $color-white;
  width: $spacing-unit * 1.5;
  transition: transform $animation-timing ease-in, fill $animation-timing ease;
}
.Sidebar-toggle:hover > svg {
  fill: $color-blue-light;
}
.Sidebar.is-closed .Sidebar-toggle > svg {
  transform: rotate(180deg);
}

@import "constants";
@import "animations";

$trigger-button-color: $color-gray-light;
$trigger-button-hover-color: $color-white;
$trigger-button-active-color: $color-green;

.SidebarTriggerButton.clickable {
  background-color: $trigger-button-color;
  -webkit-mask: url(assets/svg/trigger-button.svg) no-repeat 50% 50%;
  mask: url(assets/svg/trigger-button.svg) no-repeat 50% 50%;

  cursor: pointer;
}

/* the resource containing the button is selected*/
.SidebarTriggerButton.clickable.isSelected {
  background-color: $trigger-button-color;
}

.SidebarTriggerButton.clickable:hover {
  background-color: $trigger-button-hover-color;
}
.SidebarTriggerButton.clickable.isSelected:hover{
  background-color: $color-black
}

.SidebarTriggerButton.clickable:active {
  // make it bigger on click
  -webkit-mask-size: 40%;
  mask-size: 40%;
}


.SidebarTriggerButton.isQueued {
  background-color: $trigger-button-color;
  -webkit-mask: url(assets/svg/trigger-button.svg) no-repeat 50% 50%;
  mask: url(assets/svg/trigger-button.svg) no-repeat 50% 50%;
  animation: spin 1s linear infinite;
}

.SidebarTriggerButton.clickable.clickMe {
  background-color: inherit;
  -webkit-mask: none;
  mask: none;
  background-image: url(assets/svg/trigger-button-manual.svg);
  opacity: 0.7;
}

.SidebarTriggerButton.clickable.clickMe:hover, .SidebarTriggerButton.clickable.isSelected.clickMe:hover{
  background-color: inherit;
  opacity: 1;
}

.SidebarTriggerButton.clickable.clickMe:active {
  // make it bigger on click
  background-size: 70%;
}

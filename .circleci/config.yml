version: 2.1
orbs:
  slack: circleci/slack@3.4.0
  shellcheck: circleci/shellcheck@2.2.2
  win: circleci/windows@2.2.0
  gcp-cli: circleci/gcp-cli@2.4.0
  kubernetes: circleci/kubernetes@0.9.1
  go: circleci/go@1.7.1
jobs:
  build-linux:
    resource_class: medium+
    docker:
      - image: docker/tilt-ci@sha256:89016e491fa0dc8a23ea3c023b184fec8e966def190ab29d5631260fe43959c8
    # apiserver code generation scripts require being in GOPATH
    working_directory: /home/circleci/go/src/github.com/tilt-dev/tilt

    steps:
      - checkout
      - run: echo 'export PATH=~/go/bin:$PATH' >> $BASH_ENV
      - setup_remote_docker:
          version: 20.10.11
      - run: docker pull registry:2
      - run: sudo mv /usr/bin/helm3 /usr/bin/helm
      - run: make lint
      - run: make test_install_version_check
      - run: make wire-check
      - run: ./scripts/check-codegen.sh
      - run: make test-go
      - store_test_results:
          path: test-results
      - slack/notify-on-failure:
          only_for_branches: master

  build-js:
    docker:
      - image: cimg/node:16.8
    steps:
      - checkout
      - run: make check-js
      - run:
          name: Run jest with JUnit Reporter
          command: make test-js
          environment:
            JEST_JUNIT_OUTPUT_DIR: "reports/junit/js-test-results.xml"
      - run: make test-storybook
      - store_test_results:
          path: web/reports/junit
      - slack/notify-on-failure:
          only_for_branches: master

  publish-assets:
    docker:
      - image: docker/tilt-ci@sha256:89016e491fa0dc8a23ea3c023b184fec8e966def190ab29d5631260fe43959c8
    steps:
      - checkout
      - gcp-cli/install
      - gcp-cli/initialize
      - run: ./scripts/upload-assets.py $CIRCLE_SHA1
      - slack/notify-on-failure:
          only_for_branches: master

  build-windows:
    executor:
      name: win/default
      size: "large"
    steps:
      - run: choco install make kustomize kubernetes-helm docker-compose mingw
      - run: choco upgrade -y --allow-downgrade golang --version=1.18.0
      - run: go install gotest.tools/gotestsum@latest
      - checkout
      - run: iex ./scripts/install-dc2.ps1
      # Check to make sure Windows binaries compile
      - run:
          command: go install -mod vendor ./cmd/tilt
          environment:
            CGO_ENABLED: '1'
            CGO_LDFLAGS: -static
      - run: make shorttestsum
      - run: iex ./scripts/install.ps1
      - store_test_results:
          path: test-results

  build-integration:
    resource_class: medium+
    docker:
      - image: docker/tilt-integration-ci@sha256:03089fe7d21de858bbbe5e45759b8b4f2e39bc5426051e947d4295fd17e047fc
    steps:
      - checkout
      - run: echo 'export PATH=/go/bin:$PATH' >> $BASH_ENV
      - setup_remote_docker:
          version: 20.10.11
      - run: ctlptl create cluster kind --registry=ctlptl-registry && make integration
      - store_test_results:
          path: test-results
      - slack/notify-on-failure:
          only_for_branches: master

  test-extensions:
    docker:
      - image: docker/tilt-extensions-ci@sha256:ebf32ec06a7c8a19e521344aa5f88837b9f03c08d74dacb77b3955c68a6d8b29
    steps:
      - checkout
      - run: echo 'export PATH=/go/bin:$PATH' >> $BASH_ENV
      - setup_remote_docker:
          version: 20.10.11
      - run: ctlptl create cluster kind --registry=ctlptl-registry && make install test-extensions
      - slack/notify-on-failure:
          only_for_branches: master

  build-macos:
    macos:
      xcode: "12.4.0"

    steps:
      - checkout
      - go/install:
          version: "1.18"
      - run: curl -fsSL "https://github.com/gotestyourself/gotestsum/releases/download/v1.7.0/gotestsum_1.7.0_darwin_amd64.tar.gz" | sudo tar -xz -C /usr/local/bin gotestsum
      # We can't run the container tests on macos because nested
      # VMs don't work on circleci.
      - run: mkdir -p test-results
      # Check to make sure binaries compile
      - run: go install -mod vendor ./cmd/tilt
      # Only run watch tests, because these are currently the only tests that are OS-specific.
      # In other Tilt tests, we mock out OS-specific components.
      - run: gotestsum --format standard-quiet --junitfile test-results/unit-tests.xml -- -mod vendor ./internal/watch/...
      - store_test_results:
          path: test-results
      - slack/notify-on-failure:
          only_for_branches: master

  release-dry-run:
    docker:
      # keep image in sync with scripts/build.toast.yml
      - image: docker/tilt-releaser@sha256:80a0b6ec5276ae81b119b0fc3fa149b02b52e314eda33b0229bd60eb89649893
    environment:
      DOCKER_CLI_EXPERIMENTAL: enabled
    steps:
      - setup_remote_docker:
          version: 20.10.14
      # https://discuss.circleci.com/t/arm-version-of-remote-docker/41624
      - run: ssh remote-docker "sudo apt-get update; sudo apt-get install -y qemu-user-static binfmt-support"
      - checkout
      - run: make build-js
      - run: goreleaser --debug --rm-dist --skip-publish --snapshot
      - slack/notify-on-failure:
          only_for_branches: main

  release:
    resource_class: medium+
    docker:
      # keep image in sync with scripts/build.toast.yml
      - image: docker/tilt-releaser@sha256:80a0b6ec5276ae81b119b0fc3fa149b02b52e314eda33b0229bd60eb89649893
    environment:
      DOCKER_CLI_EXPERIMENTAL: enabled
    steps:
      - setup_remote_docker:
          version: 20.10.14
      # https://discuss.circleci.com/t/arm-version-of-remote-docker/41624
      - run: ssh remote-docker "sudo apt-get update; sudo apt-get install -y qemu-user-static binfmt-support"
      - slack/notify:
          mentions: "nick"
          message: "A Tilt release has started!"
      - checkout
      - gcp-cli/install
      - gcp-cli/initialize
      - run:
          name: Setup Docker Credentials
          command: gcloud auth configure-docker
      - run: ./scripts/release-ci.sh
      - slack/status:
          mentions: "nick"

workflows:
  version: 2
  shellcheck:
    jobs:
      - shellcheck/check:
          dir: scripts
          exclude: SC2001

  build:
    # The linux job is cheaper than the others, so run that first.
    jobs:
      - build-linux
      - build-js:
          requires:
            - build-linux
      - build-macos:
          requires:
            - build-linux
      - build-integration:
          requires:
            - build-linux
      - test-extensions:
          context:
            - Tilt Pulumi Context
          requires:
            - build-linux
      - build-windows:
          requires:
            - build-linux
      - publish-assets:
          context: Tilt Deploy Context
          filters:
            branches:
              only: master
      - release-dry-run:
          context: Tilt Slack Context
          requires:
            - build-linux
          filters:
            branches:
              only: master

  release:
    jobs:
      - release:
          context:
            - Tilt Slack Context
            - Tilt Release CLI Context
            - Tilt Docker Login Context
            - Tilt Cloud Login Context
            - Tilt Deploy Context
          filters:
            branches:
              only: never-release-on-a-branch
            tags:
              only: /v[0-9]+.[0-9]+.[0-9]+/

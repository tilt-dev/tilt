version: 2
jobs:
  build-linux:
    docker:
      - image: gcr.io/windmill-public-containers/tilt-ci@sha256:715d57e55849eadeb27afc48f4b5b8a48d48af1b58337b9af061d99629ca57d7
    working_directory: /go/src/github.com/windmilleng/tilt
    steps:
      - checkout
      - run: echo 'export PATH=~/go/bin:$PATH' >> $BASH_ENV
      - setup_remote_docker
      - run: docker pull registry:2
      - run: make check-go
      - store_test_results:
          path: test-results

  build-js:
    docker:
      - image: circleci/node:11
    steps:
      - checkout
      - run: make check-js test-js
        
  build-windows:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/windmilleng/tilt
    steps:
      - checkout
      # Currently, we only check to make sure Windows binaries compile
      - run: GOOS=windows go install github.com/windmilleng/tilt/cmd/tilt

  build-integration:
    docker:
      - image: gcr.io/windmill-public-containers/tilt-integration-ci@sha256:f086d1284cae6a055ffa3fa0dcbbb9b23c0bca8695c8c61015d993f02b562e02
    working_directory: /go/src/github.com/windmilleng/tilt
    steps:
      - checkout
      - run: echo 'export PATH=~/go/bin:$PATH' >> $BASH_ENV
      - setup_remote_docker
      # Delete any existing clusters, for `circleci local execute` mode
      - run: kind delete cluster || exit 0 
      - run: docker kill portforward || exit 0
      - run: docker rm portforward || exit 0
      - run: /go/portforward.sh start
      - run: kind create cluster
      - run: "export KUBECONFIG=$(kind get kubeconfig-path) &&
             export APISERVER_PORT=$(kubectl config view -o jsonpath='{.clusters[].cluster.server}' | cut -d: -f 3 -) &&
             /go/portforward.sh -wait $APISERVER_PORT &&
             kubectl get nodes &&
             make integration"
      - store_test_results:
          path: test-results

  build-macos:
    macos:
      xcode: "10.0.0"

    working_directory: ~/go/src/github.com/windmilleng/tilt
    steps:
      - checkout
      - restore_cache:
          keys:
            - homebrew_cache_v10
      # Bump cache version when changing this.
      - run: echo 'export HOMEBREW_PACKAGES="go@1.12 kustomize docker-compose"' >> $BASH_ENV
      # Only update when brew doesn't know about some of the packages because:
      # 1) not worth the cost, and
      # 2) hits github in a way that leads to flakyness
      - run: brew info ${HOMEBREW_PACKAGES} || brew update || true
      - run: HOMEBREW_NO_AUTO_UPDATE=true brew install ${HOMEBREW_PACKAGES}
      - save_cache:
          paths:
            - /usr/local/Homebrew
          key: homebrew_cache_v10
      - run: echo 'export PATH="/usr/local/opt/go@1.12/bin:$PATH"' >> $BASH_ENV
      # NOTE(dmiller): the helm package in Homebrew is too old, and the tests fail. Install from GitHub instead.
      - run: curl --silent --show-error --location --fail --retry 3 --output /tmp/helm.tar.gz  https://storage.googleapis.com/kubernetes-helm/helm-v2.12.1-darwin-amd64.tar.gz &&
             tar -xz -C /tmp -f /tmp/helm.tar.gz &&
             mv /tmp/darwin-amd64/helm /usr/local/bin/helm
      - run: curl -fsSL "https://github.com/gotestyourself/gotestsum/releases/download/v0.3.3/gotestsum_0.3.3_darwin_amd64.tar.gz" | sudo tar -xz -C /usr/local/bin gotestsum
      # We can't run the container tests on macos because nested
      # VMs don't work on circleci.
      - run: mkdir -p test-results
      - run: gotestsum --format standard-quiet --junitfile test-results/unit-tests.xml -- -tags 'skipcontainertests' ./...
      - store_test_results:
          path: test-results

workflows:
  version: 2
  build:
    # The linux job is cheaper than the others, so run that first.
    jobs:
      - build-linux
      - build-js:
          requires:
            - build-linux
      - build-macos:
          requires:
            - build-linux
      - build-integration:
          requires:
            - build-linux
      - build-windows:
          requires:
            - build-linux
